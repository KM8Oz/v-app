name: Electron CD

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
        - os: macos-latest
          TARGET: build-mac
          ARTI: release/*.dmg
          ARTID: release/*.dmg
          SET: export
        - os: windows-latest
          TARGET: build-win
          ARTI: release/*.7z
          ARTID: release/*.(7z|exe)
          SET: set
        - os: ubuntu-latest
          TARGET: build-linux
          ARTI: release/*.AppImage
          ARTID: release/*.(AppImage|snap)
          SET: set
    steps:
      - uses: actions/checkout@v1
      - run: echo ${{ matrix.TARGET }}
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: set gh_token
        run: ${{matrix.SET}} GH_TOKEN=${{ secrets.TOKEN }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: yarn install
        run: yarn install
      - name: Publish
        run: ${{matrix.SET}} CSC_IDENTITY_AUTO_DISCOVERY=false  && yarn ${{matrix.TARGET}}
        env:
         GH_TOKEN: ${{ secrets.TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        env:
         GH_TOKEN: ${{ secrets.TOKEN }}
        with:
          name: ${{ matrix.os }}
          path: release
          # if-no-files-found: warn # 'warn' or 'ignore'
      - uses: nagata-yoshiteru/deploy-to-dropbox@master
        with:
         DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
         GLOB: ${{matrix.ARTID}}
         FILE_WRITE_MODE: overwrite
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{matrix.ARTI}}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
